#  Copyright 2022 The Neursafe FL Authors. All Rights Reserved.
#  SPDX-License-Identifier: Apache-2.0

"""Used for custom defined compute.

Manage two path(prepared and result) and two parameters(prepared_param
and result_param). In prepared_param and prepared_path, will be saved
parameters and files from server, then used for task through FL-SDK.
In result_param and result path, will be saved parameters and files,
which are generated by task and will be send to server. they will be used
in custom defined compute.
"""

import os
from neursafe_fl.python.utils.file_io import read_json_file, write_json_file

_PREPARED_PATH = 'prepared'
_RESULT_PATH = 'result'
_PREPARED_PARAM_FILE = 'prepared_param.json'
_RESULT_PARAM_FILE = 'result_param.json'


def write_prepared_parameters(workspace, json_config):
    """Write parameters to prepared parameter file.

    Write json_config to _PREPARED_PARAM_FILE, would overwrite it.

    Args:
        workspace: Task's workspace.
        json_config: The parameters in the json_config, will be write to
            prepared parameter file.
    """
    _write_parameters(workspace, _PREPARED_PARAM_FILE, json_config)


def read_prepared_parameters(workspace):
    """Read parameters from prepared parameter file.

    Args:
        workspace: Task's workspace.

    Return: A dict, contain all parameters from prepared parameter file.
        IF has no parameter, return empty dict.
    """
    return _read_parameters(workspace, _PREPARED_PARAM_FILE)


def write_result_parameter(workspace, key, value):
    """Write parameter to result parameter file.

    Append {key: value} to _RESULT_PARAM_FILE.

    Args:
        workspace: Task's workspace.
        key: The parameter's key.
        value: The parameter's value.
    """
    _write_parameter(workspace, _RESULT_PARAM_FILE, key, value)


def write_result_parameters(workspace, json_config):
    """Write parameters to result parameter file.

    Write json_config to _RESULT_PARAM_FILE, would overwrite it.

    Args:
        workspace: Task's workspace.
        json_config: The parameters in the json_config, will be write to
            result parameter file.
    """
    _write_parameters(workspace, _RESULT_PARAM_FILE, json_config)


def read_result_parameters(workspace):
    """Read parameters from result parameter file.

    Args:
        workspace: Task's workspace.

    Return:
        A dict, contain all parameters from result parameter file.
        IF has no parameter, return empty dict.
    """
    return _read_parameters(workspace, _RESULT_PARAM_FILE)


def _write_parameter(workspace, sub_path, key, value):
    config = {}

    file = os.path.join(workspace, sub_path)
    if os.path.exists(file):
        config = read_json_file(file)

    config[key] = value

    write_json_file(file, config)


def _write_parameters(workspace, sub_path, json_config):
    write_json_file(os.path.join(workspace, sub_path), json_config)


def _read_parameters(workspace, sub_path):
    file_path = os.path.join(workspace, sub_path)
    if not os.path.exists(file_path):
        return {}

    return read_json_file(file_path)


def _create_path(path):
    if not os.path.exists(path):
        os.mkdir(path)


def create_prepared_path(workspace):
    """Create prepared path in task workspace.

    Args:
        workspace: Task's workspace.
    """
    prepared_path = get_prepared_path(workspace)
    _create_path(prepared_path)


def create_result_path(workspace):
    """Create result path in task workspace.

    Args:
        workspace: Task's workspace.
    """
    result_path = get_result_path(workspace)
    _create_path(result_path)


def get_prepared_path(workspace):
    """Get prepared path in task workspace.

    Args:
        workspace: Task's workspace.

    Return:
        Return prepared path.
    """
    return os.path.join(workspace, _PREPARED_PATH)


def get_result_path(workspace):
    """Get result path in task workspace.

    Args:
        workspace: Task's workspace.

    Return:
        Return result path.
    """
    return os.path.join(workspace, _RESULT_PATH)


def read_prepared_file(workspace, filename, deserializer=None, **kwargs):
    """Read file from prepared path.

    Args:
        workspace: Task's workspace.
        filename: The file which will be read.
        deserializer: User's defined deserialization function
            to help read file.
        kwargs: the deserializer's arguments.

    Return:
        Return the content read from filename in prepared path.
    """
    file_path = os.path.join(workspace, _PREPARED_PATH, filename)

    with open(file_path, 'rb') as custom_file:
        if deserializer:
            return deserializer(file_path, **kwargs)
        return custom_file.read()


def write_result_file(workspace, filename, content, serializer=None, **kwargs):
    """Write file to result path.

    Args:
        workspace: Task's workspace.
        filename: The file which will be written.
        content: Content will be written to the filename
        serializer: User's defined serialization function
            to help write file.
        kwargs: the serializer's arguments.
    """
    create_result_path(workspace)

    file_path = os.path.join(workspace, _RESULT_PATH, filename)
    with open(file_path, "wb") as custom_file:
        if serializer:
            serializer(custom_file, content, **kwargs)
        else:
            custom_file.write(content)
